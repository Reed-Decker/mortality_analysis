# Check dataframe length to see if empty Notes values = total columns
dim(df)
# Check dataframe structure
str(df)
# Make index of icd chapters and chapter codes, then make columns for range of each chapter
sub_chapter_start <- substr(df$ICD.Sub.Chapter.Code, 1, 3)
icd_key <- data.frame(ICD.Chapter.Codes = c(
"A01-B99",
"C00-D48",
"D50-D89",
"E00-E90",
"F00-F99",
"G00-G99",
"H00-H59",
"H60-H95",
"I00-I99",
"J00-J99",
"K00-K93",
"L00-L99",
"M00-M99",
"N00-N99",
"O00-O99",
"P00-P96",
"Q00-Q99",
"R00-R99",
"S00-T98",
"V01-Y98"
),
ICD.Chapters = c(
"Parasitic Diseases",
"Neoplams",
"Blood Diseases",
"Endocrine Diseases",
"Mental Disorders",
"Nervous System Diseases",
"Eye Diseases",
"Ear Diseases",
"Circulatory Diseases",
"Respiratory Diseases",
"Digestive Diseases",
"Skin Diseases",
"Muscular Diseases",
"Genitourinary Diseases",
"Pregnancy/Childbirth",
"Perinatal Conditions",
"Congenital Malformations",
"Not Classified Elsewhere",
"Special Purposes",
"External Causes"
)
)
icd_key[c("Code.Start", "Code.End")] <- str_split_fixed(
icd_key$ICD.Chapter.Codes,
'-',
2
)
library(sqldf)
df <- sqldf("SELECT df.*, icd_key.'ICD.Chapter.Codes'
FROM df JOIN icd_key on df.'ICD.Sub.Chapter.Code' => icd_key.'Code.Start' AND
'ICD.Sub.Chapter.Code' <= icd_key.'Code.End'")
df <- sqldf("SELECT df.*, icd_key.'ICD.Chapter.Codes'
FROM df JOIN icd_key on df.'ICD.Sub.Chapter.Code' >= icd_key.'Code.Start' AND
'ICD.Sub.Chapter.Code' <= icd_key.'Code.End'")
# Setup ----
library(rstudioapi)
library(tidyverse)
setwd(dirname(getActiveDocumentContext()$path))
df_1     <- read.delim("mortality_1999-2016_1.txt")
df_1_4   <- read.delim("mortality_1999-2016_1-4.txt")
df_5_9   <- read.delim("mortality_1999-2016_5-9.txt")
df_10_14 <- read.delim("mortality_1999-2016_10-14.txt")
df_15_19 <- read.delim("mortality_1999-2016_15-19.txt")
df_20_24 <- read.delim("mortality_1999-2016_20-24.txt")
df_25_34 <- read.delim("mortality_1999-2016_25-34.txt")
df_35_44 <- read.delim("mortality_1999-2016_35-44.txt")
df_35_44 <- read.delim("mortality_1999-2016_35-44.txt")
df_45_54 <- read.delim("mortality_1999-2016_45-54.txt")
df_55_64 <- read.delim("mortality_1999-2016_55-64.txt")
df_65_74 <- read.delim("mortality_1999-2016_65-74.txt")
df_75_84 <- read.delim("mortality_1999-2016_75-84.txt")
df_85    <- read.delim("mortality_1999-2016_85+.txt")
df <- rbind(df_1,
df_1_4,
df_5_9,
df_10_14,
df_15_19,
df_20_24,
df_25_34,
df_35_44,
df_55_64,
df_65_74,
df_75_84,
df_85)
# Data Cleaning ----
# Check for NA values
apply(df, 2, function(x) sum(is.na(x)))
# Create new dataframe to examine cause of NA Age Group values
age_group_na <- subset(df, subset = is.na(df$Age.Group.Code))
head(age_group_na)
# Remove NA Age Group values
df <- subset(df, subset = !is.na(df$Age.Group.Code))
# Create new dataframe to examine cause of NA Year values
year_na <- subset(df, subset = is.na(df$Year))
head(year_na)
# Remove NA Year values
df <- subset(df, subset = !is.na(df$Year))
# Check empty values
apply(df, 2, function(x) sum(x == ""))
# Check dataframe length to see if empty Notes values = total columns
dim(df)
# Check dataframe structure
str(df)
# Make index of icd chapters and chapter codes, then make columns for range of each chapter
sub_chapter_start <- substr(df$ICD.Sub.Chapter.Code, 1, 3)
df <- df %>% mutate(ICD.Chapter.Code = case_when(
sub_chapter_start >= "A00" & sub_chapter_start <= "B99" ~ "A01-B99",
sub_chapter_start >= "C00" & sub_chapter_start <= "D48" ~ "C00-D48",
sub_chapter_start >= "D50" & sub_chapter_start <= "D89" ~ "D50-D89",
sub_chapter_start >= "E00" & sub_chapter_start <= "E90" ~ "E00-E90",
sub_chapter_start >= "F00" & sub_chapter_start <= "F99" ~ "F00-F99",
sub_chapter_start >= "G00" & sub_chapter_start <= "G99" ~ "G00-G99",
sub_chapter_start >= "H00" & sub_chapter_start <= "H59" ~ "H00-H59",
sub_chapter_start >= "H60" & sub_chapter_start <= "H95" ~ "H60-H95",
sub_chapter_start >= "I00" & sub_chapter_start <= "I99" ~ "I00-I99",
sub_chapter_start >= "J00" & sub_chapter_start <= "J99" ~ "J00-J99",
sub_chapter_start >= "K00" & sub_chapter_start <= "K93" ~ "K00-K93",
sub_chapter_start >= "L00" & sub_chapter_start <= "L99" ~ "L00-L99",
sub_chapter_start >= "M00" & sub_chapter_start <= "M99" ~ "M00-M99",
sub_chapter_start >= "N00" & sub_chapter_start <= "N99" ~ "N00-N99",
sub_chapter_start >= "O00" & sub_chapter_start <= "O99" ~ "O00-O99",
sub_chapter_start >= "P00" & sub_chapter_start <= "P96" ~ "P00-P96",
sub_chapter_start >= "Q00" & sub_chapter_start <= "Q99" ~ "Q00-Q99",
sub_chapter_start >= "R00" & sub_chapter_start <= "R99" ~ "R00-R99",
sub_chapter_start >= "S00" & sub_chapter_start <= "T98" ~ "S00-T98",
sub_chapter_start >= "V01" & sub_chapter_start <= "Y98" ~ "V01-Y98",
sub_chapter_start >= "Z00" & sub_chapter_start <= "Z99" ~ "Z00-Z99",
sub_chapter_start >= "U00" & sub_chapter_start <= "U99" ~ "U00-U99",
))
icd_key <- data.frame(ICD.Chapter.Code = unique(df[, c("ICD.Chapter")]),
ICD.Chapter = c(
"Parasitic Diseases",
"Neoplams",
"Blood Diseases",
"Endocrine Diseases",
"Mental Disorders",
"Nervous System Diseases",
"Eye Diseases",
"Ear Diseases",
"Circulatory Diseases",
"Respiratory Diseases",
"Digestive Diseases",
"Skin Diseases",
"Muscular Diseases",
"Genitourinary Diseases",
"Pregnancy/Childbirth",
"Perinatal Conditions",
"Congenital Malformations",
"Not Classified Elsewhere",
"Special Purposes",
"External Causes"
)
)
icd_key <- data.frame(ICD.Chapter.Code = unique(df[, c("ICD.Chapter.Code")]),
ICD.Chapter = c(
"Parasitic Diseases",
"Neoplams",
"Blood Diseases",
"Endocrine Diseases",
"Mental Disorders",
"Nervous System Diseases",
"Eye Diseases",
"Ear Diseases",
"Circulatory Diseases",
"Respiratory Diseases",
"Digestive Diseases",
"Skin Diseases",
"Muscular Diseases",
"Genitourinary Diseases",
"Pregnancy/Childbirth",
"Perinatal Conditions",
"Congenital Malformations",
"Not Classified Elsewhere",
"Special Purposes",
"External Causes"
)
)
View(icd_key)
age_key$Age.Weight <- c(0.013818, # <1
0.055317, # 1-4
0.145565, # 5-9
0.145565, # 10-14
0.138646, # 15-19
0.138646, # 20-24
0.135573, # 25-34
0.162613, # 35-44
0.134834, # 45-54
0.087247, # 55-64
0.066037, # 65-74
0.044842, # 75-84
0.015508  # >=85
)
View(age_key)
unique(df$Age.Group)
View(df_45_54)
# Setup ----
library(rstudioapi)
library(tidyverse)
setwd(dirname(getActiveDocumentContext()$path))
df_1     <- read.delim("mortality_1999-2016_1.txt")
df_1_4   <- read.delim("mortality_1999-2016_1-4.txt")
df_5_9   <- read.delim("mortality_1999-2016_5-9.txt")
df_10_14 <- read.delim("mortality_1999-2016_10-14.txt")
df_15_19 <- read.delim("mortality_1999-2016_15-19.txt")
df_20_24 <- read.delim("mortality_1999-2016_20-24.txt")
df_25_34 <- read.delim("mortality_1999-2016_25-34.txt")
df_35_44 <- read.delim("mortality_1999-2016_35-44.txt")
df_35_44 <- read.delim("mortality_1999-2016_35-44.txt")
df_45_54 <- read.delim("mortality_1999-2016_45-54.txt")
df_55_64 <- read.delim("mortality_1999-2016_55-64.txt")
df_65_74 <- read.delim("mortality_1999-2016_65-74.txt")
df_75_84 <- read.delim("mortality_1999-2016_75-84.txt")
df_85    <- read.delim("mortality_1999-2016_85+.txt")
df <- rbind(df_1,
df_1_4,
df_5_9,
df_10_14,
df_15_19,
df_20_24,
df_25_34,
df_35_44,
df_45_54,
df_55_64,
df_65_74,
df_75_84,
df_85)
# Data Cleaning ----
# Check for NA values
apply(df, 2, function(x) sum(is.na(x)))
# Create new dataframe to examine cause of NA Age Group values
age_group_na <- subset(df, subset = is.na(df$Age.Group.Code))
head(age_group_na)
# Remove NA Age Group values
df <- subset(df, subset = !is.na(df$Age.Group.Code))
# Create new dataframe to examine cause of NA Year values
year_na <- subset(df, subset = is.na(df$Year))
head(year_na)
# Remove NA Year values
df <- subset(df, subset = !is.na(df$Year))
# Check empty values
# Check for NA values
apply(df, 2, function(x) sum(is.na(x)))
apply(df, 2, function(x) sum(x == ""))
sub_chapter_start <- substr(df$ICD.Sub.Chapter.Code, 1, 3)
df <- df %>% mutate(ICD.Chapter.Code = case_when(
sub_chapter_start >= "A00" & sub_chapter_start <= "B99" ~ "A01-B99",
sub_chapter_start >= "C00" & sub_chapter_start <= "D48" ~ "C00-D48",
sub_chapter_start >= "D50" & sub_chapter_start <= "D89" ~ "D50-D89",
sub_chapter_start >= "E00" & sub_chapter_start <= "E90" ~ "E00-E90",
sub_chapter_start >= "F00" & sub_chapter_start <= "F99" ~ "F00-F99",
sub_chapter_start >= "G00" & sub_chapter_start <= "G99" ~ "G00-G99",
sub_chapter_start >= "H00" & sub_chapter_start <= "H59" ~ "H00-H59",
sub_chapter_start >= "H60" & sub_chapter_start <= "H95" ~ "H60-H95",
sub_chapter_start >= "I00" & sub_chapter_start <= "I99" ~ "I00-I99",
sub_chapter_start >= "J00" & sub_chapter_start <= "J99" ~ "J00-J99",
sub_chapter_start >= "K00" & sub_chapter_start <= "K93" ~ "K00-K93",
sub_chapter_start >= "L00" & sub_chapter_start <= "L99" ~ "L00-L99",
sub_chapter_start >= "M00" & sub_chapter_start <= "M99" ~ "M00-M99",
sub_chapter_start >= "N00" & sub_chapter_start <= "N99" ~ "N00-N99",
sub_chapter_start >= "O00" & sub_chapter_start <= "O99" ~ "O00-O99",
sub_chapter_start >= "P00" & sub_chapter_start <= "P96" ~ "P00-P96",
sub_chapter_start >= "Q00" & sub_chapter_start <= "Q99" ~ "Q00-Q99",
sub_chapter_start >= "R00" & sub_chapter_start <= "R99" ~ "R00-R99",
sub_chapter_start >= "S00" & sub_chapter_start <= "T98" ~ "S00-T98",
sub_chapter_start >= "V01" & sub_chapter_start <= "Y98" ~ "V01-Y98",
sub_chapter_start >= "Z00" & sub_chapter_start <= "Z99" ~ "Z00-Z99",
sub_chapter_start >= "U00" & sub_chapter_start <= "U99" ~ "U00-U99",
))
# Check unique values of columns to be converted into keys
unique(df$ICD.Chapter.Code)
unique(df$ICD.Sub.Chapter)
unique(df$ICD.Sub.Chapter.Code)
unique(df$Year)
unique(df$Year.Code)
unique(df$Age.Group)
unique(df$Age.Group.Code)
unique(df$Gender)
unique(df$Gender.Code)
unique(df$Race)
unique(df$Race.Code)
# Remove non-numeric values from Crude.Rate
df$Crude.Rate <- gsub("[^0-9.]", "", df$Crude.Rate)
# Check non-numeric in Crude.Rate
length(grep("(^$)|([0-9])", df$Crude.Rate, invert = TRUE))
# Convert Data Types
factors <- c("ICD.Chapter.Code",
"ICD.Sub.Chapter.Code",
"Age.Group.Code",
"Gender.Code",
"Race.Code")
df[,factors] <- lapply(df[,factors],
factor)
df$Crude.Rate <- as.numeric(df$Crude.Rate)
# Create keys for columns to be removed
gender_key <- unique(df[, c("Gender.Code", "Gender")])
age_key <- unique(df[, c("Age.Group.Code", "Age.Group")])
icd_key <- data.frame(ICD.Chapter.Code = unique(df[, c("ICD.Chapter.Code")]),
ICD.Chapter = c(
"Parasitic Diseases",
"Neoplams",
"Blood Diseases",
"Endocrine Diseases",
"Mental Disorders",
"Nervous System Diseases",
"Eye Diseases",
"Ear Diseases",
"Circulatory Diseases",
"Respiratory Diseases",
"Digestive Diseases",
"Skin Diseases",
"Muscular Diseases",
"Genitourinary Diseases",
"Pregnancy/Childbirth",
"Perinatal Conditions",
"Congenital Malformations",
"Not Classified Elsewhere",
"Special Purposes",
"External Causes"
)
)
icd_sub_key <- unique(df[, c("ICD.Sub.Chapter.Code", "ICD.Sub.Chapter", "ICD.Chapter.Code")])
race_key <- unique(df[, c("Race.Code", "Race")])
# Add population weights to age key
age_key$Age.Weight <- c(0.013818, # <1
0.055317, # 1-4
0.145565, # 5-9
0.145565, # 10-14
0.138646, # 15-19
0.138646, # 20-24
0.135573, # 25-34
0.162613, # 35-44
0.134834, # 45-54
0.087247, # 55-64
0.066037, # 65-74
0.044842, # 75-84
0.015508  # >=85
)
View(age_key)
# Remove unwanted columns
df <- subset(df, select = -c(1, 2, 5, 6, 8, 10))
df <- select(df, ICD.Chapter.Code, everything())
total_deaths <- df %>%
left_join(icd_key, by = c("ICD.Sub.Chapter.Code" = "ICD.Sub.Chapter.Code")) %>%
group_by(ICD.Sub.Chapter.Code, ICD.Chapter) %>%
summarise(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths))
total_deaths <- df %>%
left_join(icd_key, by = c("ICD.Chapter.Code" = "ICD.Chapter.Code")) %>%
group_by(ICD.Sub.Chapter.Code, ICD.Chapter) %>%
summarise(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths))
print(total_deaths)
age_adjust <- function(X, ...){
X <- group_by(X, ..., Age.Group.Code)
X <- summarise(X, Population = sum(Population), Deaths = sum(Deaths))
X$Crude.Rate <- (X$Deaths * 100000) / X$Population
X <- merge(
X,
age_key[, c("Age.Group.Code", "Age.Weight")],
by = "Age.Group.Code"
)
X$Age.Adjustment <- X$Age.Weight * X$Crude.Rate
X <- group_by(X, ...)
X <- summarise(X, Crude.Rate.Adjusted = sum(Age.Adjustment))
return(X)
}
death_cause <- c("I00-I99", "C00-D48")
filter(df, ICD.Chapter.Code %in% death_cause) %>%
age_adjust(ICD.Chapter.Code, Year) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = ICD.Chapter.Code)) +
geom_line() +
geom_point() +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Top Causes of Death Over Time") +
scale_color_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
)
filter(df, ICD.Chapter.Code %in% death_cause) %>%
age_adjust(ICD.Chapter.Code, Year, Race.Code) %>%
ggplot(
aes(
x = Year,
y = Crude.Rate.Adjusted,
shape = ICD.Chapter.Code,
color = Race.Code
)
) +
geom_line() +
geom_point() +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Top Causes of Death Over Time") +
scale_shape_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
) +
scale_color_discrete(labels = race_key$Race, name = "Race")
death_cause <- total_deaths$ICD.Chapter.Code[
which(
total_deaths$Deaths > 999999 &
total_deaths$Deaths < 10000000
)
]
filter(df, ICD.Chapter.Code %in% death_cause) %>%
age_adjust(ICD.Chapter.Code, Year) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = ICD.Chapter.Code)) +
geom_line() +
geom_point(aes(shape = ICD.Chapter.Code)) +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Common Causes of Death Over Time") +
scale_color_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
) +
scale_linetype_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
) +
scale_shape_manual(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death",
values = c(15, 16, 17, 15, 16, 17, 15, 16)
)
death_cause <- total_deaths$ICD.Chapter.Code[
which(
total_deaths$Deaths > 999999 &
total_deaths$Deaths < 10000000
)
]
View(total_deaths)
total_deaths <- df %>%
left_join(icd_key, by = c("ICD.Chapter.Code" = "ICD.Chapter.Code")) %>%
group_by(ICD.Chapter.Code, ICD.Chapter) %>%
summarise(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths))
death_cause <- c("I00-I99", "C00-D48")
death_cause <- total_deaths$ICD.Chapter.Code[
which(
total_deaths$Deaths > 999999 &
total_deaths$Deaths < 10000000
)
]
filter(df, ICD.Chapter.Code %in% death_cause) %>%
age_adjust(ICD.Chapter.Code, Year) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = ICD.Chapter.Code)) +
geom_line() +
geom_point(aes(shape = ICD.Chapter.Code)) +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Common Causes of Death Over Time") +
scale_color_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
) +
scale_linetype_discrete(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death"
) +
scale_shape_manual(
labels = icd_key$ICD.Chapter[
icd_key$ICD.Chapter.Code %in% death_cause
],
name = "Cause of Death",
values = c(15, 16, 17, 15, 16, 17, 15, 16)
)
filter(df, ICD.Chapter.Code == "F01-F99") %>%
age_adjust(ICD.Chapter.Code, Year, Race.Code) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = Race.Code)) +
geom_line() +
geom_point() +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Deaths from Mental Illness by Race") +
scale_color_discrete(labels = race_key$Race, name = "Race")
View(icd_key)
filter(df, ICD.Chapter.Code == "F00-F99") %>%
age_adjust(ICD.Chapter.Code, Year, Race.Code) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = Race.Code)) +
geom_line() +
geom_point() +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Deaths from Mental Illness by Race") +
scale_color_discrete(labels = race_key$Race, name = "Race")
filter(df, ICD.Chapter.Code == "F00-F99") %>%
age_adjust(ICD.Chapter.Code, Year, Race.Code, Gender.Code) %>%
ggplot(aes(x = Year, y = Crude.Rate.Adjusted, color = Race.Code, shape = Gender.Code)) +
geom_line() +
geom_point() +
ylab("Age Adjusted Crude Death Rate") +
labs(title = "Deaths from Mental Illness by Race") +
scale_color_discrete(labels = race_key$Race, name = "Race")
